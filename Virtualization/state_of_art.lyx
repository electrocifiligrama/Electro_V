#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 2cm
\rightmargin 1.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Estado del Arte
\end_layout

\begin_layout Subsubsection
Antecedentes
\end_layout

\begin_layout Standard
La práctica de la virtualización surgió en la década de 1960 cuando IBM
 quiso mejorar el particionado de los mainframes (o computadoras centrales)
 para mejorar la utilización del CPU, de manera que los programadores pudieran
 estar utilizando recursos del mainframe al mismo tiempo.
 Los científicos de IBM observaron que estas particiones lógicas permitían
 que varios procesos y aplicaciones pudieran estar ejecutándose al mismo
 tiempo, lo que aumentaba la eficiencia.
 En ese tiempo, reinaban los costosos mainframes, por lo que tenía sentido
 aprovechar este escaso recurso para múltiples procesos, mediante VMM (Virtual
 Machine Monitor).
\end_layout

\begin_layout Standard
Tiempo después, con el inicio de la década de 1980 y 1990, la arquitectura
 x86 (que comprendía los microprocesadores compatibles con el juego de instrucci
ones Intel 8086) empezó a prevalecer y surgieron las minicomputadoras y
 luego las PCs (computadoras personales), al punto de que esta arquitectura
 se empezó a utilizar para implementar servidores y los mainframes junto
 a VMM pasaron a ser una curiosidad histórica.
 A modo de ejemplo, era más costoso tener un mainframe que dividiera recursos
 para una cantidad de tareas que tener varios equipos que realizaran cada
 uno una de esas tareas, además que ocupaban un menor espacio.
\end_layout

\begin_layout Standard
Irónicamente, en los '90, las capacidades de las computadoras modernas y
 su bajo costo (la combinación que había hecho tan prolífero el uso de VMM
 en la década pasada) empezaron a causar problemas que los investigadores
 pensaron que las máquinas virtuales podrían resolver.
 Como ya mencionamos, los bajos costos de las PCs hicieron que su uso se
 masificara, pero la CPU se encontraba generalmente infrautilizada, al igual
 que el almacenamiento.
 Además, la cantidad de funcionalidades agregadas en los sistemas operativos
 hacían que éstos fueran más frágiles y vulnerables.
 Poder mover aplicaciones que antes corrían en muchas máquinas físicas a
 máquinas virtuales y consolidar las mismas en algunas pocas físicas permitía
 incrementar la eficiencia y el uso de la CPU, como así también gestionar
 mejor el almacenamiento.
 En el presente, VMM no es tanto un vehículo para multitarea, como se pensó
 originalmente, sino más una solución para confiabilidad y seguridad.
 
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
Por ejemplo, funciones como migración y seguridad que tuvieron sus dificultades
 al momento de llevarlas a cabo parecen tener una solución accesible en
 la capa VMM, ya que provee cierta compatibilidad hacia atrás para implementar
 sistemas operativos
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Arquitecturas de Virtualización
\end_layout

\begin_layout Standard
//imagen
\end_layout

\begin_layout Standard
bare metal vs hosted
\end_layout

\begin_layout Standard
características: isolation, interposition, inspection.
\end_layout

\begin_layout Standard
Protection rings
\end_layout

\begin_layout Subsubsection
Beneficios 
\end_layout

\begin_layout Standard
La virtualización lleva consigo beneficios e inconvenientes intrínsecos
 de esta tecnología.
 En esta parte del artículo se intenta agrupar los beneficios en tres factores,
 y también luego se mencionarán los inconvenientes.
\end_layout

\begin_layout Standard
El primer beneficio se lo puede etiquetar como 
\begin_inset Quotes eld
\end_inset

consolidación
\begin_inset Quotes erd
\end_inset

.
 Esta consolidación, o unificación, permite combinar todas las cargas de
 trabajo en un número reducido de plataformas físicas, lo cual incrementa
 el uso de los recursos y la optimización a la hora de utilizarlos.
 Además, poseer en funcionamiento una plataforma de virtualización que admita
 compatibilidad y permita administrar distintos sistemas independientes,
 favorece la migración de sistemas antiguos e incompatibles con tecnologías
 emergentes por otros más actuales, ya que no hace falta cesar la actividad
 de aquellos sistemas que no sean necesario cambiar, lo cual reduce el impacto
 en estas migraciones de sistemas.
\end_layout

\begin_layout Standard
En segundo lugar, se cuenta con la 
\begin_inset Quotes eld
\end_inset

fiabilidad
\begin_inset Quotes erd
\end_inset

.
 Se puede afirmar esto ya que esta tecnología mantiene funcionalidades y
 disponibilidades de operación en distintas maquinas virtuales, de manera
 aislada, lo cual permite que alguna de las maquinas falle, sin que esta
 falla tenga efectos sobre otras maquinas, aunque estás esten funcionando
 en el momento de la falla.
 Por otra parte, a las maquinas virtuales les son asignados recursos a medida
 que estas los necesitan, sin que tengan que encargarse de la obtención,
 configuración e instalación de los mismos.
\end_layout

\begin_layout Standard
Como tercer y último lugar, se identifica al beneficio de la 
\begin_inset Quotes eld
\end_inset

seguridad
\begin_inset Quotes erd
\end_inset

.
 Este beneficio se da en el sentido del aislamiento entre maquinas virtuales,
 ya que si la seguridad de una maquina está comprometida, el riesgo se detiene
 en esa maquina y no se propaga a las demás, debido a la capa de virtualización.
\end_layout

\begin_layout Subsubsection
Inconvenientes
\end_layout

\begin_layout Standard
En cuanto a los inconvenientes de la tecnología de virtualización, se identifica
n:
\end_layout

\begin_layout Standard
1) Pérdida de performance/rendimiento en algunos casos específicos en los
 que se requiera un hardware único para mayor eficiencia, o para cálculos
 que lleven mucho tiempo y que requieran mucha capacidad de una central
 de procesamiento especial.
\end_layout

\begin_layout Standard
2) Necesidad de redundancia en el caso de que falle el hardware que implementa
 la virtualización.
 Al fallar este, todas las particiones pierden sus datos, excepto que se
 tenga una redundancia para este hardware.
\end_layout

\begin_layout Standard
3) Costos operativos.
 En una organización, se debe tener en cuenta la necesidad de personal experto
 para poder encargarse de mantener y manejar el entorno virtual, dado sus
 complejidades, licencias que hay que tener en cuenta, y actualizaciones.
\end_layout

\begin_layout Subsubsection
Security Threats 
\end_layout

\begin_layout Standard
threats que al 2013 no tenian solucion
\end_layout

\begin_layout Standard
apartado aparte porque merece mencion especial, basicamente existen:
\end_layout

\begin_layout Standard
virtualization based malware
\end_layout

\begin_layout Standard
denial of service attack (DoS attack)
\end_layout

\begin_layout Standard
Communication Attack among guest VMs and the host
\end_layout

\begin_layout Standard
VM Escape
\end_layout

\begin_layout Standard
Inter-VM Attacks and Network Blind Spots
\end_layout

\end_body
\end_document

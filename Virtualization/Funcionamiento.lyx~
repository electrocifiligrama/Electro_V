#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Funcionamiento
\end_layout

\begin_layout Standard

\lang spanish-mexico
A grandes rasgos el funcionamiento de los servidores virtuales puede entenderse
 como la siguiente serie de pasos:
\end_layout

\begin_layout Itemize

\lang spanish-mexico
Un Layer dedicado separa la capa fisica del host del guest
\end_layout

\begin_layout Itemize

\lang spanish-mexico
Este software divide y maneja los rescursos fisicos a los guests.
\end_layout

\begin_layout Itemize

\lang spanish-mexico
El usuario utiliza directamente las aplicaciones e interfaces que corren
 en los guests.
\end_layout

\begin_layout Itemize

\lang spanish-mexico
El Layer se encarga de entregar recursos de la capa fisica a un guest cuando
 el usuario los solicita asi como tambien efectuar los cambios necesarios
 en la capa fisica.
\end_layout

\begin_layout Standard

\lang spanish-mexico
Los servidores virtuales pueden dividirse en tres categorias principales.
 Estas son virtualización completa, virtualización parcial y virtualización
 por sistema operativo(OS).
\end_layout

\begin_layout Subsubsection

\lang spanish-mexico
Virtualización completa
\end_layout

\begin_layout Standard

\lang spanish-mexico
En este tipo de virtualización se tiene que cada guest se comporta de manera
 independiente de los demás y no hay interacción entre ellos.
 Los guests pueden utilizar distintos sistemas operativos y distintos formas
 de manejo de archivos.
 Sin embargo, todo los guests corren en el mismo servidor físico, por lo
 que comparten los recursos físicos de este.
\end_layout

\begin_layout Standard

\lang spanish-mexico
Con el fin de cada guest se abstraiga completamente de los demás, se utiliza
 un software denominado hypervisor el cual se encarga de interactuar directament
e con los recursos del host como el disco y la CPU.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes/FullVirtualization.PNG
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Esquema de virtualizacion completaa
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunos ejemplos comerciales que siguen este esquema son VMware Workstation
\begin_inset Foot
status open

\begin_layout Plain Layout
https://www.vmware.com/es/products/workstation-player.html
\end_layout

\end_inset

 , Parallels
\begin_inset Foot
status open

\begin_layout Plain Layout
https://www.parallels.com/
\end_layout

\end_inset

 y Virtual PC
\begin_inset Foot
status open

\begin_layout Plain Layout
https://www.microsoft.com/es-ar/download/details.aspx?id=3702
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\lang spanish-mexico
Virtualización parcial
\end_layout

\begin_layout Standard

\lang spanish-mexico
A diferencia de la virtualización completa, se puede pensar como que en
 este tipo de virtualización se 
\begin_inset Quotes eld
\end_inset

delegan
\begin_inset Quotes erd
\end_inset

 tareas sobre los guests.
 En este caso los guests saben de la existencia de los demás y también que
 recursos necesitan utilizar.
 Por lo que, si bien en este esquema también hay un hypervisor, el mismo
 necesita menos procesamiento ya que cada guest esta enterado de las demandas
 de recursos de los demás.
\end_layout

\begin_layout Subsubsection

\lang spanish-mexico
Virtualización por OS
\end_layout

\begin_layout Standard

\lang spanish-mexico
Finalmente, la virtualización por OS se distingue en que no hay hypervisor
 sino que la funcionalidad de virtualización es empleada completamente por
 el OS del host.
 En este caso se tiene la limitación de que todos los guests deben utilizar
 el mismo OS.
 Tiene en comun con la virtualización completa el hecho de que cada guest
 es independiente del otro y no sabe de la existencia de los demás.
\end_layout

\begin_layout Standard
\align center

\lang spanish-mexico
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes/OsVirtualization.PNG
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout

\lang spanish-mexico
\begin_inset Caption Standard

\begin_layout Plain Layout

\lang spanish-mexico
Esquema de virtualizacion por software
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang spanish-mexico
Algunos ejemplos que siguen este esquema son OpenVZ
\begin_inset Foot
status open

\begin_layout Plain Layout

\lang spanish-mexico
https://openvz.org/
\end_layout

\end_inset

 , y Linux VServer
\begin_inset Foot
status open

\begin_layout Plain Layout

\lang spanish-mexico
http://linux-vserver.org/Welcome_to_Linux-VServer.org
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\lang spanish-mexico
Caso de ejemplo: Xen
\end_layout

\begin_layout Standard

\lang spanish-mexico
Xen es una tecnologia de vitrualizacion de codigo abierto desarrollada por
 la universidad de Cambridge.
 Esta tecnologia sigue el equema de virtualizacion parcial y a continuacion
 se daran detalles de como el mismo realizaba las tareas de virtualizacion.
\end_layout

\begin_layout Subsubsection

\lang spanish-mexico
Virtualizacion de memoria
\end_layout

\begin_layout Standard

\lang spanish-mexico
Para las lecturas, Xen automatiamente otorga permiso de read-only, de acceso
 directo a los OS de los guests para acceder a las paginas del host.Mientras
 que las actualizaciones de paginas se realizan por Xen mediante 'hyperllamadas'.
Las hyperllamadas consisten en un medio de comunicacion sincronico entre
 los guests y Xen.
 Para evitar overhead los OS de las maquinas virtuales pueden acumular actualiza
ciones tandas y hacer una sola hyperllamada que se encargue de todas las
 actualizaciones y asi evitar tener que realizar una hyperllamada por actualizac
ion.
\end_layout

\begin_layout Subsubsection

\lang spanish-mexico
Virtualizacion de CPU
\end_layout

\begin_layout Standard

\lang spanish-mexico
Para este caso el hypervisor hace uso del CPU directamente por lo que es
 necesario que Xen tenga mayor prioridad que el OS propio del host.Esto convierte
 a Xen en la funcion con mayor prioridad de todo el sistema por lo que para
 correr instrucciones privilegiadas es necesario virtualizarlas y ejecutarlas
 directamente mediante Xen.
\end_layout

\end_body
\end_document

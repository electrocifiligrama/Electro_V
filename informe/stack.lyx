#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 2cm
\rightmargin 1.5cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Stack
\end_layout

\begin_layout Standard
La base del módulo del stack se basa en un shift register bidireccional.
 La cantidad de niveles requerida define el tamaño del registro, en este
 caso 4, es decir que el MSB equivaldrá a 3.
 
\end_layout

\begin_layout Standard
El stack implementado con hardware específico tiene una estructura LIFO,
 
\shape italic
last in first out
\shape default
.
 Los registros se inicializan en cero, cuando se pushea un valor al stack
 se shiftean los bits a la derecha, ingresando el valor por el bit más significa
tivo (en la figura: MSB); mientras que al realizar la acción de pop, se
 shiftean a la izquierda, siendo la salida también por el bit más significativo.
\end_layout

\begin_layout Standard
Lo anterior mencionado se puede ver en la figura 
\begin_inset Formula $\text{\ref{fig:Shift-Register-Bidireccional}}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/shift_reg.PNG
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Shift Register Bidireccional.
\begin_inset CommandInset label
LatexCommand label
name "fig:Shift-Register-Bidireccional"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
La función del stack es guardar el valor del program counter register (PC),
 que es de 11 bits, por lo que necesitaríamos 11 shift registers para guardar
 cada uno de los bits y a su vez dar soporte para 4 subrutinas anidadas.
 El esquema del que se habla se puede ver en la figura 
\begin_inset Formula $\text{\ref{fig:Sstrucuture}}$
\end_inset

, donde 
\begin_inset Formula $n$
\end_inset

 equivale a 10, para un total de 11 bits.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/strucutre.PNG
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Estructura del stack.
\begin_inset CommandInset label
LatexCommand label
name "fig:Sstrucuture"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La implementación del shift register se realizó en verilog, mientras que
 la estructura del stack fue con lógica combinacional.
 El módulo final se puede observar en la imagen 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:subrutinecontrolunit"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 La idea es que el stack se actualiza de manera sincrónica, estando listo
 para ser leído el valor del TOS en cada flanco ascendente del clock, pero
 la salida, que es el TOS, se determina de manera asincrónica, entre un
 flanco descendente y uno ascendente del clock, ya que es cuando cambia
 la instrucción.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/subrutinecontrolunit.PNG
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Entradas y salidas del módulo de control de subrutina.
\begin_inset CommandInset label
LatexCommand label
name "fig:subrutinecontrolunit"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En resumen entonces, el módulo de control de subrutina recibe los 7 bits
 más significativos del opcode para poder discernir si se trata de un BSR
 (
\shape italic
branch to subroutine
\shape default
) o RET (
\shape italic
return to subroutine
\shape default
), además recibe el PC, que es el valor a guardar, y el clock ya que funciona
 de manera sincrónica.
 Entre las salidas se encuentran las señales de isRET, e isBSR que están
 en 
\shape italic
high
\shape default
 si se trata de un RET o de un BSR respectivamente, y estas señales se utilizan
 de manera externa al módulo para actualizar el valor del PC.
 También devuelve la variable stackPC que es el valor del TOS (
\shape italic
top of stack
\shape default
).
\end_layout

\end_body
\end_document
